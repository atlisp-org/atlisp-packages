;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; 这是使用开发工具 dev-tools 自动创建的程序源文件 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; 定义配置项 'at-3d:first 用于 应用包 at-3d 的 第一个配置项 first 
(@:define-config 'at-3d:first "我是配置项 at-3d:first 的值" "这个配置项的用途说明。")
;; (@:get-config 'at-3d:first) ;; 获取配置顶的值
;; (@:set-config 'at-3d:first  "新设的值") ;; 设置配置顶的值
;; 向系统中添加菜单 
(@:add-menu "3D相关" "多点剖切" "(at-3d:slice-by-pts)" )

(defun at-3d:slice-by-pts ()
  (@:help '("将一个曲面用过多个点的平面剖切"))
  (@:prompt "请选择曲面")
  (setq surfaces (ssget '((0 . "surface"))))
  
  (@:prompt "请选择剖切面上的点")
  (setq pts (pickset:to-list(ssget '((0 . "point")))))
  (setq slicesurface (ui:select-multi "请选择切面方式"
				      '("1 平行于xy面 " "2 平行于yz面" "3 平行于zx面" "4 垂直于导向线")))
  (setq pt1 (entity:getdxf pt% 10))
  (setq surface-xy (list pt1
			 (mapcar '+ pt1 '(100 0 0))
			 (mapcar '+ pt1 '(0 100 0))))
  (setq surface-yz (list pt1
			 (mapcar '+ pt1 '(0 100 0 ))
			 (mapcar '+ pt1 '(0 0 100 ))))
  (setq surface-zx (list pt1
			 (mapcar '+ pt1 '(0 0 100))
			 (mapcar '+ pt1 '(100 0 0))))
  ;;取点所在的曲线，求点到曲线起点的距离，求点处的切线，求点处的垂面。(vlax-curve-getDistAtPoint curve-obj point)
  (if (and (setq route (ssget pt1))
	   (setq firstdiv (vlax-curve-getfirstderiv (e2o route) (vlax-curve-getDistAtPoint (e2o route) pt1))))
      (setq surface-vr (list pt1

			     ))
    (setq surface-vr nil)
    )
			 
  (foreach
   pt% pts
   (push-var)
   (setvar "osmode" 0)
   (command "slice" surfaces "" "3"
	    (setq pt1 (entity:getdxf pt% 10))
	    (mapcar '+ pt1 '(0 100.0 0))
	    (mapcar '+ pt1 '(0 0 100.0))
	    )
   (while (> (getvar "cmdactive") 0)
     (command "")
     )
   (pop-var)
   (if (= "SURFACE" (entity:getdxf (entlast) 0))
       (setq surfaces (ssadd (entlast) surfaces)))
   ))

   ;;(foreach
   ;; surface% surfaces
   ;; (setq pt1 (entity:getdxf pt% 10))
    ;; (setq new-surface
    ;; 	  (vla-slicesolid
    ;; 	   surface%
    ;; 	   (point:to-ax pt1)
    ;; 	   (point:to-ax (mapcar '+ pt1 '(0 100.0 0)))
    ;; 	   (point:to-ax (mapcar '+ pt1 '(0 0 100.0)))
    ;; 	   :vlax-true))
   ;; (setq surfaces (cons new-surface surfaces)))))
     
  
